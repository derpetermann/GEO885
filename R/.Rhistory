airports <- read.csv("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/GIUZ_AirTravel_20210509/airports.csv")
amm <- read.csv("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/GIUZ_AirTravel_20210509/AIRTRAVELS.csv")
world <- st_read("/Users/chaualala/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/TM_WORLD_BORDERS_SIMPL-0 Kopie")
airports <- airports %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports <- subset(airports, iata_code != "")
airports <- airports %>% st_as_sf(coords = c("longitude_deg", "latitude_deg"), crs = 4326) %>% rename(coordinates = geometry)
amm_arr <- left_join(amm,airports, by = c("ARRIVAL_AIRPORT" = "iata_code"))
amm_arr <- amm_arr %>% rename(arr_coordinates = coordinates,
dep_country = iso_country)
amm <- amm %>% subset(DIVISION != "Support&Mangement")
amm <- left_join(amm,airports, by = c("DEPARTURE_AIRPORT" = "iata_code"))
amm <- amm %>% rename(dep_coordinates = coordinates,
dep_country = iso_country)
amm <- left_join(amm,airports, by = c("ARRIVAL_AIRPORT" = "iata_code"))
amm <- amm %>% rename(arr_coordinates = coordinates,
arr_country = iso_country)
ggplot() +
geom_sf(data=world, lwd = .5)+
geom_sf(data = amm, aes(geometry = dep_coordinates, col = "dep_coordinates")) +
geom_sf(data = amm, aes(geometry = arr_coordinates, col = "arr_coordinates")) +
labs(fill = "Flight type") +
theme(panel.grid.minor = element_blank())+
ggtitle("Departure and arrival locations for all GIUZ flights separated by symbols")+
xlab("Longitude") + ylab("Latitude")
amm_arr <- st_as_sf(amm_arr)
flightmap <- st_join(world, amm_arr, join = st_contains_properly, left=TRUE)
flightmap_sort <- flightmap %>% group_by(NAME) %>% count()
flightmap_sort
# create map
ggplot() +
geom_sf(data=world)+
geom_sf(data = flightmap_sort, aes(fill = n)) +
labs(fill = "Locations per country") +
scico::scale_fill_scico(palette = "bilbao")+
theme(panel.grid.minor = element_blank())+
ggtitle("Arrival locations for all GIUZ flights counnted by country")+
xlab("Longitude") + ylab("Latitude")+
theme(legend.position = "none")
flightpath <- cbind(amm$DEPARTURE_AIRPORT,
amm$ARRIVAL_AIRPORT) %>% as.data.frame()
flightpath <- flightpath %>% rename(Departure = V1,
Arrival = V2)
flightpath <- subset(flightpath, Departure != "" & Arrival != "")
plot_flights(flightpath)
average_co2_17_20 <- amm %>% group_by(year) %>% mean()
average_co2_17_20 <- amm %>% group_by(YEAR) %>% mean()
average_co2_17_20 <- amm %>% group_by(YEAR) %>% mean(mean = mean(EMISSIONS_KGCO2EQ))
average_co2_17_20 <- amm %>% group_by(YEAR) %>% mutate(mean = mean(EMISSIONS_KGCO2EQ))
View(average_co2_17_20)
average_co2_17_20 <- amm %>% group_by(YEAR) %>% mean(EMISSIONS_KGCO2EQ)
average_co2_17_20 <- amm %>% group_by(YEAR) %>% summarise(mean = mean(EMISSIONS_KGCO2EQ))
View(average_co2_17_20)
average_co2_17_20 <- amm %>% group_by(YEAR) %>% summarize(mean = mean(EMISSIONS_KGCO2EQ))
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv(LANG = "en")
library(tidyverse)
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggmap)
library(flightplot)
library(sf)
library(shiny)
library(geosphere)
airports <- read.csv("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/GIUZ_AirTravel_20210509/airports.csv")
amm <- read.csv("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/MNF_amm.xlsx")
world <- st_read("/Users/chaualala/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/TM_WORLD_BORDERS_SIMPL-0 Kopie")
airports <- airports %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports <- subset(airports, iata_code != "")
airports <- airports %>% st_as_sf(coords = c("longitude_deg", "latitude_deg"), crs = 4326) %>% rename(coordinates = geometry)
amm_arr <- left_join(amm,airports, by = c("ARRIVAL_AIRPORT" = "iata_code"))
view
view(amm)
airports <- read.csv("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/GIUZ_AirTravel_20210509/airports.csv")
amm <- read.table(pipe("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/MNF_amm.xlsx"), sep="\t", header = TRUE)
airports <- read.csv("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/GIUZ_AirTravel_20210509/airports.csv")
amm <- read.table("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/MNF_amm.xlsx", sep="\t", header = TRUE)
library(readxl)
MNF_amm <- read_excel("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/MNF_amm.xlsx")
View(MNF_amm)
airports <- read.csv("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/GIUZ_AirTravel_20210509/airports.csv")
amm <- read_excel("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/MNF_amm.xlsx")
world <- st_read("/Users/chaualala/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/TM_WORLD_BORDERS_SIMPL-0 Kopie")
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv(LANG = "en")
library(tidyverse)
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggmap)
library(flightplot)
library(sf)
library(shiny)
library(geosphere)
airports <- read.csv("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/GIUZ_AirTravel_20210509/airports.csv")
amm <- read_excel("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/MNF_amm.xlsx")
world <- st_read("/Users/chaualala/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/TM_WORLD_BORDERS_SIMPL-0 Kopie")
knitr::opts_chunk$set(echo = TRUE)
Sys.setenv(LANG = "en")
library(tidyverse)
library(dplyr)
library(tidyr)
library(ggplot2)
library(ggmap)
library(flightplot)
library(sf)
library(shiny)
library(geosphere)
airports <- read.csv("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/GIUZ_AirTravel_20210509/airports.csv")
amm <- read.csv("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/GIUZ_AirTravel_20210509/AIRTRAVELS.csv")
world <- st_read("/Users/chaualala/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/TM_WORLD_BORDERS_SIMPL-0 Kopie")
airports <- airports %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports <- subset(airports, iata_code != "")
airports <- airports %>% st_as_sf(coords = c("longitude_deg", "latitude_deg"), crs = 4326) %>% rename(coordinates = geometry)
amm_arr <- left_join(amm,airports, by = c("ARRIVAL_AIRPORT" = "iata_code"))
amm_arr <- amm_arr %>% rename(arr_coordinates = coordinates,
dep_country = iso_country)
amm <- amm %>% subset(DIVISION != "Support&Mangement")
amm <- left_join(amm,airports, by = c("DEPARTURE_AIRPORT" = "iata_code"))
amm <- amm %>% rename(dep_coordinates = coordinates,
dep_country = iso_country)
amm <- left_join(amm,airports, by = c("ARRIVAL_AIRPORT" = "iata_code"))
amm <- amm %>% rename(arr_coordinates = coordinates,
arr_country = iso_country)
ggplot() +
geom_sf(data=world, lwd = .5)+
geom_sf(data = amm, aes(geometry = dep_coordinates, col = "dep_coordinates")) +
geom_sf(data = amm, aes(geometry = arr_coordinates, col = "arr_coordinates")) +
labs(fill = "Flight type") +
theme(panel.grid.minor = element_blank())+
ggtitle("Departure and arrival locations for all GIUZ flights separated by symbols")+
xlab("Longitude") + ylab("Latitude")
amm_arr <- st_as_sf(amm_arr)
flightmap <- st_join(world, amm_arr, join = st_contains_properly, left=TRUE)
flightmap_sort <- flightmap %>% group_by(NAME) %>% count()
View(amm)
head(amm)
airports <- read.csv("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/GIUZ_AirTravel_20210509/airports.csv")
ammmnf <- read_excel("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/MNF_amm.xlsx")
world <- st_read("/Users/chaualala/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/TM_WORLD_BORDERS_SIMPL-0 Kopie")
airports <- read.csv("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/GIUZ_AirTravel_20210509/airports.csv")
amm_giuz <- read.csv("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/GIUZ_AirTravel_20210509/AIRTRAVELS.csv")
world <- st_read("/Users/chaualala/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/TM_WORLD_BORDERS_SIMPL-0 Kopie")
View(amm)
airports <- read.csv("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/GIUZ_AirTravel_20210509/airports.csv")
amm <- read_excel("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/MNF_amm.xlsx")
world <- st_read("/Users/chaualala/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/TM_WORLD_BORDERS_SIMPL-0 Kopie")
View(amm)
View(amm_giuz)
airports <- airports %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports <- subset(airports, iata_code != "")
airports <- airports %>% st_as_sf(coords = c("longitude_deg", "latitude_deg"), crs = 4326) %>% rename(coordinates = geometry)
amm <- amm %>% rename(ARRIVAL_AIRPORT = Abflug,
DEPARTURE_AIRPORT = Destination)
view(amm$Serviceklasse)
summary(amm$Serviceklasse)
unique(amm$Serviceklasse)
airports <- airports %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports <- read.csv("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/GIUZ_AirTravel_20210509/airports.csv")
amm <- read_excel("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/MNF_amm.xlsx")
world <- st_read("/Users/chaualala/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/TM_WORLD_BORDERS_SIMPL-0 Kopie")
airports <- airports %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports <- subset(airports, iata_code != "")
airports <- airports %>% st_as_sf(coords = c("longitude_deg", "latitude_deg"), crs = 4326) %>% rename(coordinates = geometry)
amm <- amm %>% rename(ARRIVAL_AIRPORT = Abflug,
DEPARTURE_AIRPORT = Destination)
amm$Serviceklasse[amm$Serviceklasse == "Y"] <- "Economy Class"
amm$Serviceklasse[amm$Serviceklasse == "B"] <- "Business Class"
amm$Serviceklasse[amm$Serviceklasse == "F"] <- "First Class"
amm$Serviceklasse[amm$Serviceklasse == "P"] <- "Premium Economy Class"
amm_arr <- left_join(amm,airports, by = c("ARRIVAL_AIRPORT" = "iata_code"))
amm_arr <- amm_arr %>% rename(arr_coordinates = coordinates,
dep_country = iso_country)
amm <- left_join(amm,airports, by = c("DEPARTURE_AIRPORT" = "iata_code"))
amm <- amm %>% rename(dep_coordinates = coordinates,
dep_country = iso_country)
amm <- left_join(amm,airports, by = c("ARRIVAL_AIRPORT" = "iata_code"))
amm <- amm %>% rename(arr_coordinates = coordinates,
arr_country = iso_country)
airports <- read.csv("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/GIUZ_AirTravel_20210509/airports.csv")
amm <- read_excel("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/MNF_amm.xlsx")
world <- st_read("/Users/chaualala/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/TM_WORLD_BORDERS_SIMPL-0 Kopie")
airports <- airports %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports <- subset(airports, iata_code != "")
airports <- airports %>% st_as_sf(coords = c("longitude_deg", "latitude_deg"), crs = 4326) %>% rename(coordinates = geometry)
amm <- amm %>% rename(DEPARTURE_AIRPORT = Abflug,
ARRIVAL_AIRPORT = Destination)
amm$Serviceklasse[amm$Serviceklasse == "Y"] <- "Economy Class"
amm$Serviceklasse[amm$Serviceklasse == "B"] <- "Business Class"
amm$Serviceklasse[amm$Serviceklasse == "F"] <- "First Class"
amm$Serviceklasse[amm$Serviceklasse == "P"] <- "Premium Economy Class"
amm_arr <- left_join(amm,airports, by = c("ARRIVAL_AIRPORT" = "iata_code"))
amm_arr <- amm_arr %>% rename(arr_coordinates = coordinates,
dep_country = iso_country)
amm <- left_join(amm,airports, by = c("DEPARTURE_AIRPORT" = "iata_code"))
amm <- amm %>% rename(dep_coordinates = coordinates,
dep_country = iso_country)
amm <- left_join(amm,airports, by = c("ARRIVAL_AIRPORT" = "iata_code"))
amm <- amm %>% rename(arr_coordinates = coordinates,
arr_country = iso_country)
view(amm)
head
head(amm)
amm <- subset( amm, select = -"Kosten (in CHF" )
amm <- subset( amm, select = -"Kosten (in CHF)")
amm <- subset( amm, select = -c("Kosten (in CHF)"))
amm <- subset(amm, select = -amm$`Kosten (in CHF)`)
drop <- c("Kosten (in CHF)")
amm = amm[,!(names(amm) %in% drop)]
view(amm)
airports <- read.csv("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/GIUZ_AirTravel_20210509/airports.csv")
amm <- read_excel("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/MNF_amm.xlsx")
world <- st_read("/Users/chaualala/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/TM_WORLD_BORDERS_SIMPL-0 Kopie")
airports <- airports %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports <- subset(airports, iata_code != "")
airports <- airports %>% st_as_sf(coords = c("longitude_deg", "latitude_deg"), crs = 4326) %>% rename(coordinates = geometry)
amm <- amm %>% rename(DEPARTURE_AIRPORT = Abflug,
ARRIVAL_AIRPORT = Destination)
amm$Serviceklasse[amm$Serviceklasse == "Y"] <- "Economy Class"
amm$Serviceklasse[amm$Serviceklasse == "B"] <- "Business Class"
amm$Serviceklasse[amm$Serviceklasse == "F"] <- "First Class"
amm$Serviceklasse[amm$Serviceklasse == "P"] <- "Premium Economy Class"
drop <- c("Kosten (in CHF)", "id.x", "id,y")
amm = amm[,!(names(amm) %in% drop)]
amm_arr <- left_join(amm,airports, by = c("ARRIVAL_AIRPORT" = "iata_code"))
amm_arr <- amm_arr %>% rename(arr_coordinates = coordinates,
dep_country = iso_country)
amm <- left_join(amm,airports, by = c("DEPARTURE_AIRPORT" = "iata_code"))
amm <- amm %>% rename(dep_coordinates = coordinates,
dep_country = iso_country)
amm <- left_join(amm,airports, by = c("ARRIVAL_AIRPORT" = "iata_code"))
amm <- amm %>% rename(arr_coordinates = coordinates,
arr_country = iso_country)
ggplot() +
geom_sf(data=world, lwd = .5)+
geom_sf(data = amm, aes(geometry = dep_coordinates, col = "dep_coordinates")) +
geom_sf(data = amm, aes(geometry = arr_coordinates, col = "arr_coordinates")) +
labs(fill = "Flight type") +
theme(panel.grid.minor = element_blank())+
ggtitle("Departure and arrival locations for all GIUZ flights separated by symbols")+
xlab("Longitude") + ylab("Latitude")
amm_arr <- st_as_sf(amm_arr)
flightmap <- st_join(world, amm_arr, join = st_contains_properly, left=TRUE)
flightmap_sort <- flightmap %>% group_by(NAME) %>% count()
# create map
ggplot() +
geom_sf(data=world)+
geom_sf(data = flightmap_sort, aes(fill = n)) +
labs(fill = "Locations per country") +
scico::scale_fill_scico(palette = "bilbao")+
theme(panel.grid.minor = element_blank())+
ggtitle("Arrival locations for all GIUZ flights counnted by country")+
xlab("Longitude") + ylab("Latitude")+
theme(legend.position = "none")
amm_arr <- st_as_sf(amm_arr)
flightmap <- st_join(world, amm_arr, join = st_contains_properly, left=TRUE)
flightmap_sort <- flightmap %>% group_by(NAME) %>% count()
sf::sf_use_s2(FALSE)
amm_arr <- st_as_sf(amm_arr)
flightmap <- st_join(world, amm_arr, join = st_contains_properly, left=TRUE)
flightmap_sort <- flightmap %>% group_by(NAME) %>% count()
flightmap_sort
# create map
ggplot() +
geom_sf(data=world)+
geom_sf(data = flightmap_sort, aes(fill = n)) +
labs(fill = "Locations per country") +
scico::scale_fill_scico(palette = "bilbao")+
theme(panel.grid.minor = element_blank())+
ggtitle("Arrival locations for all GIUZ flights counnted by country")+
xlab("Longitude") + ylab("Latitude")+
theme(legend.position = "none")
view(flightmap_sort)
View(airports)
# create map
ggplot() +
geom_sf(data=world)+
geom_sf(data = flightmap_sort, aes(fill = n)) +
labs(fill = "Locations per country") +
scico::scale_fill_scico(palette = "bilbao")+
theme(panel.grid.minor = element_blank())+
ggtitle("Arrival locations for all GIUZ flights counnted by country")+
xlab("Longitude") + ylab("Latitude")+
theme(legend.position = "none")
airports <- read.csv("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/GIUZ_AirTravel_20210509/airports.csv")
amm <- read_excel("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/MNF_amm.xlsx")
world <- st_read("/Users/chaualala/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/TM_WORLD_BORDERS_SIMPL-0 Kopie")
airports <- airports %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports <- subset(airports, iata_code != "")
airports <- airports %>% st_as_sf(coords = c("longitude_deg", "latitude_deg"), crs = 4326) %>% rename(coordinates = geometry)
amm <- amm %>% rename(DEPARTURE_AIRPORT = Abflug,
ARRIVAL_AIRPORT = Destination)
amm$Serviceklasse[amm$Serviceklasse == "Y"] <- "Economy Class"
amm$Serviceklasse[amm$Serviceklasse == "B"] <- "Business Class"
amm$Serviceklasse[amm$Serviceklasse == "F"] <- "First Class"
amm$Serviceklasse[amm$Serviceklasse == "P"] <- "Premium Economy Class"
drop <- c("Kosten (in CHF)", "id.x", "id.y")
amm = amm[,!(names(amm) %in% drop)]
amm_arr <- left_join(amm,airports, by = c("ARRIVAL_AIRPORT" = "iata_code"))
amm_arr <- amm_arr %>% rename(arr_coordinates = coordinates,
dep_country = iso_country)
amm <- left_join(amm,airports, by = c("DEPARTURE_AIRPORT" = "iata_code"))
amm <- amm %>% rename(dep_coordinates = coordinates,
dep_country = iso_country)
amm <- left_join(amm,airports, by = c("ARRIVAL_AIRPORT" = "iata_code"))
amm <- amm %>% rename(arr_coordinates = coordinates,
arr_country = iso_country)
airports <- read.csv("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/GIUZ_AirTravel_20210509/airports.csv")
amm <- read_excel("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/MNF_amm.xlsx")
world <- st_read("/Users/chaualala/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/TM_WORLD_BORDERS_SIMPL-0 Kopie")
airports <- airports %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports <- subset(airports, iata_code != "")
airports <- airports %>% st_as_sf(coords = c("longitude_deg", "latitude_deg"), crs = 4326) %>% rename(coordinates = geometry)
amm <- amm %>% rename(DEPARTURE_AIRPORT = Abflug,
ARRIVAL_AIRPORT = Destination)
amm$Serviceklasse[amm$Serviceklasse == "Y"] <- "Economy Class"
amm$Serviceklasse[amm$Serviceklasse == "B"] <- "Business Class"
amm$Serviceklasse[amm$Serviceklasse == "F"] <- "First Class"
amm$Serviceklasse[amm$Serviceklasse == "P"] <- "Premium Economy Class"
amm_arr <- left_join(amm,airports, by = c("ARRIVAL_AIRPORT" = "iata_code"))
amm_arr <- amm_arr %>% rename(arr_coordinates = coordinates,
dep_country = iso_country)
amm <- left_join(amm,airports, by = c("DEPARTURE_AIRPORT" = "iata_code"))
amm <- amm %>% rename(dep_coordinates = coordinates,
dep_country = iso_country)
amm <- left_join(amm,airports, by = c("ARRIVAL_AIRPORT" = "iata_code"))
amm <- amm %>% rename(arr_coordinates = coordinates,
arr_country = iso_country)
drop <- c("Kosten (in CHF)", "id.x", "id.y")
amm = amm[,!(names(amm) %in% drop)]
airports <- read.csv("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/GIUZ_AirTravel_20210509/airports.csv")
amm <- read_excel("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/MNF_amm.xlsx")
world <- st_read("/Users/chaualala/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/TM_WORLD_BORDERS_SIMPL-0 Kopie")
airports <- airports %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports <- subset(airports, iata_code != "")
airports <- airports %>% st_as_sf(coords = c("longitude_deg", "latitude_deg"), crs = 4326) %>% rename(coordinates = geometry)
amm <- amm %>% rename(DEPARTURE_AIRPORT = Abflug,
ARRIVAL_AIRPORT = Destination)
amm$Serviceklasse[amm$Serviceklasse == "Y"] <- "Economy Class"
amm$Serviceklasse[amm$Serviceklasse == "B"] <- "Business Class"
amm$Serviceklasse[amm$Serviceklasse == "F"] <- "First Class"
amm$Serviceklasse[amm$Serviceklasse == "P"] <- "Premium Economy Class"
amm_arr <- left_join(amm,airports, by = c("ARRIVAL_AIRPORT" = "iata_code"))
amm_arr <- amm_arr %>% rename(arr_coordinates = coordinates,
dep_country = iso_country)
amm <- left_join(amm,airports, by = c("DEPARTURE_AIRPORT" = "iata_code"))
amm <- amm %>% rename(dep_coordinates = coordinates,
dep_country = iso_country)
amm <- left_join(amm,airports, by = c("ARRIVAL_AIRPORT" = "iata_code"))
amm <- amm %>% rename(arr_coordinates = coordinates,
arr_country = iso_country)
amm = select(amm, -c("Kosten (in CHF)", "id.x", "id.y"))
drop <- c("Kosten (in CHF)", "id.x", "id.y")
amm = amm[,!(names(amm) %in% drop)]
amm <- amm %>% rowwise() %>%
mutate(distance = geosphere::distHaversine(dep_coordinates, arr_coordinates))
amm_distance <- amm
airports <- read.csv("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/GIUZ_AirTravel_20210509/airports.csv")
amm <- read_excel("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/MNF_amm.xlsx")
world <- st_read("/Users/chaualala/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/TM_WORLD_BORDERS_SIMPL-0 Kopie")
amm_distance <- amm
view(amm_distance)
airports_distance <- airports
view(airports_distance)
airports <- read.csv("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/GIUZ_AirTravel_20210509/airports.csv")
amm <- read_excel("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/MNF_amm.xlsx")
world <- st_read("/Users/chaualala/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/TM_WORLD_BORDERS_SIMPL-0 Kopie")
amm_distance <- amm
airports_distance <- airports
airports <- airports %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports_distance <- airports_distance %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports <- subset(airports, iata_code != "")
airports <- airports %>% st_as_sf(coords = c("longitude_deg", "latitude_deg"), crs = 4326) %>% rename(coordinates = geometry)
amm <- amm %>% rename(DEPARTURE_AIRPORT = Abflug,
ARRIVAL_AIRPORT = Destination)
amm$Serviceklasse[amm$Serviceklasse == "Y"] <- "Economy Class"
amm$Serviceklasse[amm$Serviceklasse == "B"] <- "Business Class"
amm$Serviceklasse[amm$Serviceklasse == "F"] <- "First Class"
amm$Serviceklasse[amm$Serviceklasse == "P"] <- "Premium Economy Class"
amm_arr <- left_join(amm,airports, by = c("ARRIVAL_AIRPORT" = "iata_code"))
amm_arr <- amm_arr %>% rename(arr_coordinates = coordinates,
dep_country = iso_country)
amm <- left_join(amm,airports, by = c("DEPARTURE_AIRPORT" = "iata_code"))
amm <- amm %>% rename(dep_coordinates = coordinates,
dep_country = iso_country)
amm <- left_join(amm,airports, by = c("ARRIVAL_AIRPORT" = "iata_code"))
amm <- amm %>% rename(arr_coordinates = coordinates,
arr_country = iso_country)
drop <- c("Kosten (in CHF)", "id.x", "id.y")
amm = amm[,!(names(amm) %in% drop)]
view(amm_distance)
view(airports_distance)
airports_distance <- subset(airports_distance, iata_code != "")
view(airports_distance)
amm_distance <- left_join(amm_distance,airports, by = c("Abflug" = "iata_code"))
amm_distance <- left_join(amm_distance, airports, by = c("Destination" = "iata_code"))
view(amm_distance)
airports <- read.csv("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/GIUZ_AirTravel_20210509/airports.csv")
amm <- read_excel("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/MNF_amm.xlsx")
world <- st_read("/Users/chaualala/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/TM_WORLD_BORDERS_SIMPL-0 Kopie")
amm_distance <- amm
airports_distance <- airports
airports <- airports %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports <- subset(airports, iata_code != "")
airports_distance <- airports_distance %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports_distance <- subset(airports_distance, iata_code != "")
airports <- airports %>% st_as_sf(coords = c("longitude_deg", "latitude_deg"), crs = 4326) %>% rename(coordinates = geometry)
amm <- amm %>% rename(DEPARTURE_AIRPORT = Abflug,
ARRIVAL_AIRPORT = Destination)
amm$Serviceklasse[amm$Serviceklasse == "Y"] <- "Economy Class"
amm$Serviceklasse[amm$Serviceklasse == "B"] <- "Business Class"
amm$Serviceklasse[amm$Serviceklasse == "F"] <- "First Class"
amm$Serviceklasse[amm$Serviceklasse == "P"] <- "Premium Economy Class"
amm_arr <- left_join(amm,airports, by = c("ARRIVAL_AIRPORT" = "iata_code"))
amm_arr <- amm_arr %>% rename(arr_coordinates = coordinates,
dep_country = iso_country)
amm <- left_join(amm,airports, by = c("DEPARTURE_AIRPORT" = "iata_code"))
amm <- amm %>% rename(dep_coordinates = coordinates,
dep_country = iso_country)
amm <- left_join(amm,airports, by = c("ARRIVAL_AIRPORT" = "iata_code"))
amm <- amm %>% rename(arr_coordinates = coordinates,
arr_country = iso_country)
drop <- c("Kosten (in CHF)", "id.x", "id.y")
amm = amm[,!(names(amm) %in% drop)]
amm_distance <- left_join(amm_distance,airports_distance, by = c("Abflug" = "iata_code"))
amm_distance <- left_join(amm_distance, airports_distance, by = c("Destination" = "iata_code"))
view(amm_distance)
head(amm_distance)
amm_distance <- amm_distance %>% rename(dep_lon = longitude_deg.x,
dep_lat = latitude_deg.x,
arr_lon = longitude_deg.y,
arr_lat = latitude_deg.y)
view(amm_distance)
amm_distance <- amm_distance %>% rowwise() %>%
mutate(distance = geosphere::distHaversine(c(dep_lon, dep_lat),
c(arr_lon, arr_lat)))
view(amm_distance)
airports <- read.csv("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/GIUZ_AirTravel_20210509/airports.csv")
amm <- read_excel("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/MNF_amm.xlsx")
world <- st_read("/Users/chaualala/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/TM_WORLD_BORDERS_SIMPL-0 Kopie")
amm_distance <- amm
airports_distance <- airports
airports <- airports %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports <- subset(airports, iata_code != "")
airports_distance <- airports_distance %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports_distance <- subset(airports_distance, iata_code != "")
airports <- airports %>% st_as_sf(coords = c("longitude_deg", "latitude_deg"), crs = 4326) %>% rename(coordinates = geometry)
amm <- amm %>% rename(DEPARTURE_AIRPORT = Abflug,
ARRIVAL_AIRPORT = Destination)
amm$Serviceklasse[amm$Serviceklasse == "Y"] <- "Economy Class"
amm$Serviceklasse[amm$Serviceklasse == "B"] <- "Business Class"
amm$Serviceklasse[amm$Serviceklasse == "F"] <- "First Class"
amm$Serviceklasse[amm$Serviceklasse == "P"] <- "Premium Economy Class"
amm_arr <- left_join(amm,airports, by = c("ARRIVAL_AIRPORT" = "iata_code"))
amm_arr <- amm_arr %>% rename(arr_coordinates = coordinates,
dep_country = iso_country)
amm <- left_join(amm,airports, by = c("DEPARTURE_AIRPORT" = "iata_code"))
amm <- amm %>% rename(dep_coordinates = coordinates,
dep_country = iso_country)
amm <- left_join(amm,airports, by = c("ARRIVAL_AIRPORT" = "iata_code"))
amm <- amm %>% rename(arr_coordinates = coordinates,
arr_country = iso_country)
drop <- c("Kosten (in CHF)", "id.x", "id.y")
amm = amm[,!(names(amm) %in% drop)]
amm_distance <- left_join(amm_distance,airports_distance, by = c("Abflug" = "iata_code"))
amm_distance <- left_join(amm_distance, airports_distance, by = c("Destination" = "iata_code"))
amm_distance <- amm_distance %>% rename(dep_lon = longitude_deg.x,
dep_lat = latitude_deg.x,
arr_lon = longitude_deg.y,
arr_lat = latitude_deg.y)
amm_distance <- amm_distance %>% rowwise() %>%
mutate(distance(km) = geosphere::distHaversine(c(dep_lon, dep_lat),
amm_distance <- amm_distance %>% rowwise() %>%
mutate(distance[km] = geosphere::distHaversine(c(dep_lon, dep_lat),
amm_distance <- amm_distance %>% rowwise() %>%
mutate(distance_km = geosphere::distHaversine(c(dep_lon, dep_lat),
c(arr_lon, arr_lat)))
view(amm_distance)
ggplot()+
geom_boxplot(amm_distance, aes(x=Jahr, y = distance_km))
ggplot()+
geom_line(amm_distance, aes(x=Jahr, y = distance_km))
ggplot(amm_distance, aes(x=Jahr, y = distance_km))+
geom_line()
ggplot(amm_distance, aes(x=Jahr, y = distance_km))+
geom_boxplot()
amm_distance_count <- amm_distance %>% group_by(Jahr) %>% count(distance_km)
View(amm_distance_count)
amm_distance_count <- amm_distance %>% group_by(Jahr) %>% count(distance_km) %>% summarize()
amm_distance_count <- amm_distance %>% group_by(Jahr) %>% count() %>% summarize()
View(amm_distance_count)
amm_distance_count <- amm_distance %>% group_by(Jahr) %>% count()
amm_distance_count <- amm_distance %>% group_by(Jahr) %>% summarize(count(distance_km))
amm_distance_count <- amm_distance %>% group_by(Jahr) %>% summarize(distance_km)
amm_distance_count <- amm_distance %>% group_by(Jahr) %>% sum(distance_km)
amm_distance_count <- amm_distance %>% group_by(Jahr) %>% summarize(sum = sum(distance_km))
amm_distance_count <- amm_distance %>% group_by(Jahr) %>% summarize(sum = sum(distance_km, na.rm=TRUE))
ggplot(amm_distance, aes(x=Jahr, y = sum))+
geom_boxplot()
ggplot(amm_distance_count, aes(x=Jahr, y = sum))+
geom_boxplot()
ggplot(amm_distance_count, aes(x=Jahr, y = sum))+
geom_bar()
ggplot(amm_distance_count, aes(x=Jahr, y = sum))+
geom_line()
amm_distance <- amm_distance %>% rowwise() %>%
mutate(distance_km = (geosphere::distHaversine(c(dep_lon, dep_lat),
c(arr_lon, arr_lat)))/1000)
view(amm_distance)
amm_distance_count <- amm_distance %>% group_by(Jahr) %>% summarize(sum = sum(distance_km, na.rm=TRUE))
ggplot(amm_distance_count, aes(x=Jahr, y = sum))+
geom_line()
