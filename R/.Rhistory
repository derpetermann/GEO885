ggplot() +
geom_sf(data=world, lwd = .5)+
geom_sf(data = amm, aes(geometry = dep_coordinates, col = "red")) +
scale_fill_viridis_c() +
theme(panel.grid.minor = element_blank())+
ggtitle("Departure locations for all GIUZ flights")+
xlab("Longitude") + ylab("Latitude")+
theme(legend.position = "none")
ggplot() +
geom_sf(data=world, lwd = .5)+
geom_sf(data = amm, aes(geometry = arr_coordinates, col = "blue")) +
scale_fill_viridis_c() +
theme(panel.grid.minor = element_blank())+
ggtitle("Arrival locations for all GIUZ flights")+
xlab("Longitude") + ylab("Latitude")+
theme(legend.position = "none")
?geom_sf
ggplot() +
geom_sf(data=world, lwd = .5)+
geom_sf(data = amm, aes(geometry = dep_coordinates, col = "red")) +
scale_fill_viridis_c() +
theme(panel.grid.minor = element_blank())+
ggtitle("Departure locations for all GIUZ flights")+
xlab("Longitude") + ylab("Latitude")+
theme(legend.position = "none")
ggplot() +
geom_sf(data=world, lwd = .5)+
geom_sf(data = amm, aes(geometry = arr_coordinates, col = "green")) +
scale_fill_viridis_c() +
theme(panel.grid.minor = element_blank())+
ggtitle("Arrival locations for all GIUZ flights")+
xlab("Longitude") + ylab("Latitude")+
theme(legend.position = "none")
ggplot() +
geom_sf(data=world, lwd = .5)+
geom_sf(data = amm, aes(geometry = dep_coordinates, col = "red")) +
scale_fill_viridis_c() +
theme(panel.grid.minor = element_blank())+
ggtitle("Departure locations for all GIUZ flights")+
xlab("Longitude") + ylab("Latitude")+
theme(legend.position = "none")
ggplot() +
geom_sf(data=world, lwd = .5)+
geom_sf(data = amm, aes(geometry = arr_coordinates, col = "yellow")) +
scale_fill_viridis_c() +
theme(panel.grid.minor = element_blank())+
ggtitle("Arrival locations for all GIUZ flights")+
xlab("Longitude") + ylab("Latitude")+
theme(legend.position = "none")
ggplot() +
geom_sf(data=world, lwd = .5)+
geom_sf(data = amm, aes(geometry = dep_coordinates, col = "red")) +
theme(panel.grid.minor = element_blank())+
ggtitle("Departure locations for all GIUZ flights")+
xlab("Longitude") + ylab("Latitude")+
theme(legend.position = "none")
ggplot() +
geom_sf(data=world, lwd = .5)+
geom_sf(data = amm, aes(geometry = arr_coordinates, col = "ghostwhite")) +
theme(panel.grid.minor = element_blank())+
ggtitle("Arrival locations for all GIUZ flights")+
xlab("Longitude") + ylab("Latitude")+
theme(legend.position = "none")
ggplot() +
geom_sf(data=world, lwd = .5)+
geom_sf(data = amm, aes(geometry = dep_coordinates, col = "red")) +
theme(panel.grid.minor = element_blank())+
ggtitle("Departure locations for all GIUZ flights")+
xlab("Longitude") + ylab("Latitude")
ggplot() +
geom_sf(data=world, lwd = .5)+
geom_sf(data = amm, aes(geometry = arr_coordinates, col = "blue")) +
theme(panel.grid.minor = element_blank())+
ggtitle("Arrival locations for all GIUZ flights")+
xlab("Longitude") + ylab("Latitude")
ggplot() +
geom_sf(data=world, lwd = .5)+
geom_sf(data = amm, aes(geometry = dep_coordinates, col = "blue")) +
theme(panel.grid.minor = element_blank())+
ggtitle("Departure locations for all GIUZ flights")+
xlab("Longitude") + ylab("Latitude")
ggplot() +
geom_sf(data=world, lwd = .5)+
geom_sf(data = amm, aes(geometry = arr_coordinates, col = "blue")) +
theme(panel.grid.minor = element_blank())+
ggtitle("Arrival locations for all GIUZ flights")+
xlab("Longitude") + ylab("Latitude")
ggplot() +
geom_sf(data=world, lwd = .5)+
geom_sf(data = amm, aes(geometry = dep_coordinates)) +
theme(panel.grid.minor = element_blank())+
ggtitle("Departure locations for all GIUZ flights")+
xlab("Longitude") + ylab("Latitude")
ggplot() +
geom_sf(data=world, lwd = .5)+
geom_sf(data = amm, aes(geometry = arr_coordinates, col = "blue")) +
theme(panel.grid.minor = element_blank())+
ggtitle("Arrival locations for all GIUZ flights")+
xlab("Longitude") + ylab("Latitude")
ggplot() +
geom_sf(data=world, lwd = .5)+
geom_sf(data = amm, aes(geometry = dep_coordinates)) +
theme(panel.grid.minor = element_blank())+
ggtitle("Departure locations for all GIUZ flights")+
xlab("Longitude") + ylab("Latitude")
ggplot() +
geom_sf(data=world, lwd = .5)+
geom_sf(data = amm, aes(geometry = arr_coordinates)) +
theme(panel.grid.minor = element_blank())+
ggtitle("Arrival locations for all GIUZ flights")+
xlab("Longitude") + ylab("Latitude")
ggplot() +
geom_sf(data=world, lwd = .5)+
geom_sf(data = amm, aes(geometry = dep_coordinates, shape = 17)) +
geom_sf(data = amm, aes(geometry = arr_coordinates, shape = 24)) +
theme(panel.grid.minor = element_blank())+
ggtitle("Departure and arrival locations for all GIUZ flights separated by symbols")+
xlab("Longitude") + ylab("Latitude")
ggplot() +
geom_sf(data=world, lwd = .5)+
geom_sf(data = amm, aes(geometry = dep_coordinates, pch = 17)) +
geom_sf(data = amm, aes(geometry = arr_coordinates, pch = 24)) +
theme(panel.grid.minor = element_blank())+
ggtitle("Departure and arrival locations for all GIUZ flights separated by symbols")+
xlab("Longitude") + ylab("Latitude")
ggplot() +
geom_sf(data=world, lwd = .5)+
geom_sf(data = amm, aes(geometry = dep_coordinates)) +
geom_sf(data = amm, aes(geometry = arr_coordinates)) +
theme(panel.grid.minor = element_blank())+
ggtitle("Departure and arrival locations for all GIUZ flights separated by symbols")+
xlab("Longitude") + ylab("Latitude")
ggplot() +
geom_sf(data=world, lwd = .5)+
geom_sf(data = amm, aes(geometry = dep_coordinates, col = "red")) +
geom_sf(data = amm, aes(geometry = arr_coordinates)) +
theme(panel.grid.minor = element_blank())+
ggtitle("Departure and arrival locations for all GIUZ flights separated by symbols")+
xlab("Longitude") + ylab("Latitude")
ggplot() +
geom_sf(data=world, lwd = .5)+
geom_sf(data = amm, aes(geometry = dep_coordinates, col = "red")) +
geom_sf(data = amm, aes(geometry = arr_coordinates, col = "green")) +
theme(panel.grid.minor = element_blank())+
ggtitle("Departure and arrival locations for all GIUZ flights separated by symbols")+
xlab("Longitude") + ylab("Latitude")
ggplot() +
geom_sf(data=world, lwd = .5)+
geom_sf(data = amm, aes(geometry = dep_coordinates, col = dep_coordinates)) +
geom_sf(data = amm, aes(geometry = arr_coordinates, col = arr_coordinates)) +
theme(panel.grid.minor = element_blank())+
ggtitle("Departure and arrival locations for all GIUZ flights separated by symbols")+
xlab("Longitude") + ylab("Latitude")
ggplot() +
geom_sf(data=world, lwd = .5)+
geom_sf(data = amm, aes(geometry = dep_coordinates, col = "dep_coordinates")) +
geom_sf(data = amm, aes(geometry = arr_coordinates, col = "arr_coordinates")) +
theme(panel.grid.minor = element_blank())+
ggtitle("Departure and arrival locations for all GIUZ flights separated by symbols")+
xlab("Longitude") + ylab("Latitude")
library(flightplot)
install.packages(flightplot)
plot_flights <- function(trips,
crop = TRUE,
land_color = "#f6e8c3",
water_color = "aliceblue",
dom_color = "#3288bd",
int_color = "#d53e4f",
alpha = 0.5,
times_as_thickness = TRUE) {
colnames(trips) <- c("DEPARTURE_AIRPORT", "ARRIVAL_AIRPORT")
my_airports <- tibble::tibble(IATA = unique(c(trips$Departure,
trips$Arrival)))
my_airports <- inner_join(my_airports,
airports,
by = "IATA")
trips %<>%
arrange_path() %>%
group_by(.data$Departure, .data$Arrival) %>%
summarise(n = n()) %>%
ungroup()
trips %<>%
inner_join(airports, by = c("Departure" = "IATA")) %>%
inner_join(airports, by = c("Arrival" = "IATA")) %>%
mutate(International = ifelse(.data$Country.x == .data$Country.y, FALSE, TRUE))
routes <- geosphere::gcIntermediate(p1 = select(trips,
.data$Longtitude.x,
.data$Latitude.x),
p2 = select(trips,
.data$Longtitude.y,
.data$Latitude.y),
n = 500,
breakAtDateLine = TRUE,
addStartEnd = TRUE,
sp = TRUE)
routes %<>%
sf::st_as_sf() %>%
mutate(n = trips$n,
int = trips$International)
if(!times_as_thickness) {
routes$n <- 1
}
if(crop == TRUE) {
long_limits <- get_map_border(my_airports$Longtitude,
type = "long")
lat_limits <- get_map_border(my_airports$Latitude,
type = "lat")
} else if (crop == "NA") {
long_limits <- c(-180, -40)
lat_limits <- c(0, 90)
} else if (crop == "48States") {
long_limits <- c(-131, -61)
lat_limits <- c(23, 51)
} else {
long_limits <- c(-180, 180)
lat_limits <- c(-90, 90)
}
ggplot() +
geom_sf(data = world, fill = land_color, size = 0) +
theme(panel.background = element_rect(fill = water_color)) +
geom_sf(data = routes,
mapping = aes(size = n/2,
color = factor(.data$int)),
linetype = "solid") +
geom_point(data = my_airports,
aes(x = .data$Longtitude,
y = .data$Latitude)) +
ggrepel::geom_text_repel(data = my_airports,
aes(x = .data$Longtitude,
y = .data$Latitude,
label = .data$IATA)) +
scale_color_manual(values = alpha(c(dom_color,
int_color),
alpha)) +
scale_size_identity() +
scale_x_continuous(limits = long_limits,
expand = c(0, 0)) +
scale_y_continuous(limits = lat_limits,
expand = c(0, 0)) +
labs(x = NULL, y = NULL) +
theme(legend.position = "none")
}
plot_flights(amm)
library(flightplot)
plot_flights(amm)
flightpath <- mutate(Departure = amm$DEPARTURE_AIRPORT,
Arrival = amm$ARRIVAL_AIRPORT)
flightpath <- cbind(amm$DEPARTURE_AIRPORT,
amm$ARRIVAL_AIRPORT)
flightpath
plot_flights(flightpath)
flightpath <- cbind(amm$DEPARTURE_AIRPORT,
amm$ARRIVAL_AIRPORT) %>% as.data.frame()
View(flightpath)
plot_flights(flightpath)
flightpath <- flightpath %>% rename(Departure = V1,
Arrival = v2)
flightpath <- flightpath %>% rename(Departure = V1,
Arrival = V2)
plot_flights(flightpath)
# Network visualisation
library(igraph)
edgelist <- as.matrix(amm[c("dep_coordinates", "arr_coordinates")])
g <- graph_from_edgelist(edgelist, directed = TRUE)
View(edgelist)
# Network visualisation
library(igraph)
edgelist <- as.matrix(amm[c("dep_coordinates", "arr_coordinates")])
g <- graph_from_edgelist(edgelist, directed = TRUE)
# Network visualisation
library(igraph)
edgelist <- as.matrix(amm[c("DEPARTURE_AIRPORT", "ARRIVAL_AIRPORT")])
g <- graph_from_edgelist(edgelist, directed = TRUE)
# Network visualisation
library(igraph)
edgelist <- as.matrix(amm[c("dep_coordinates", "arr_coordinates")])
g <- graph_from_edgelist(edgelist, directed = TRUE)
allUSA <- ggplot() + usMap +
geom_curve(data=migrate,
aes(x=flon, y=flat, xend=tlon, yend=tlat),
col="#00008b",
size=.5,
curvature=0.2) +
geom_point(data=migrate,
aes(x=flon, y=flat),
colour="blue",
size=1.5) +
geom_point(data=migrate,
aes(x=tlon, y=tlat),
colour="blue") +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks=element_blank(),
plot.title=element_text(hjust=0.5, size=12)) +
ggtitle("Migration Map: Three Generations of Adult Decendants of Walter F. Herget, Pekin, IL")
allUSA <- ggplot() + world +
geom_curve(data=amm,
aes(dep_coordinates, arr_coordinates),
col="#00008b",
size=.5,
curvature=0.2) +
geom_sf(data = amm, aes(geometry = dep_coordinates, col = "dep_coordinates")) +
geom_sf(data = amm, aes(geometry = arr_coordinates, col = "arr_coordinates")) +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks=element_blank(),
plot.title=element_text(hjust=0.5, size=12)) +
ggtitle("Migration Map: Three Generations of Adult Decendants of Walter F. Herget, Pekin, IL")
ggplot() +
geom_sf(data=world, lwd = .5)+
geom_curve(data=amm,
aes(dep_coordinates, arr_coordinates),
col="#00008b",
size=.5,
curvature=0.2) +
geom_sf(data = amm, aes(geometry = dep_coordinates, col = "dep_coordinates")) +
geom_sf(data = amm, aes(geometry = arr_coordinates, col = "arr_coordinates")) +
theme(axis.line=element_blank(),
axis.text.x=element_blank(),
axis.text.y=element_blank(),
axis.title.x=element_blank(),
axis.title.y=element_blank(),
axis.ticks=element_blank(),
plot.title=element_text(hjust=0.5, size=12)) +
ggtitle("Migration Map: Three Generations of Adult Decendants of Walter F. Herget, Pekin, IL")
View(flightpath)
flightpath <- subset(flightpath, Departure != "" | Arrival != "")
flightpath <- subset(flightpath, Departure != "" & Arrival != "")
plot_flights(flightpath)
plot_flights(flightpath[1:20,])
plot_flights(flightpath[1:5,])
class(flightpath$Arrival)
head(flightpath)
plot_flights(flightpath[1:2,])
plot_flights(sample_trips[1:2,])
plot_flights(sample_trips)
plot_flights(flightpath)
flightmap <- st_join(world, amm, join = st_contains_properly, left=TRUE)
class(amm)
amm <- st_as_sf(amm)
class(amm)
flightmap <- st_join(world, amm, join = st_contains_properly, left=TRUE)
View(flightmap)
flightmap_sort <- flightmap %>% group_by(FIPS) %>% count()
sf::sf_use_s2(FALSE)
amm <- st_as_sf(amm)
flightmap <- st_join(world, amm, join = st_contains_properly, left=TRUE)
flightmap_sort <- flightmap %>% group_by(FIPS) %>% count()
library(RColorBrewer)
palette = colorRampPalette(brewer.pal(n=51, name='Oranges'))(51)
palette = c("white", palette)
# create map
ggplot() +
geom_sf(data=world_poly, lwd = .5)+
geom_sf(data = worldmap_sort, aes(fill = n)) +
scale_fill_viridis_c() +
# customize legend title
labs(fill = "Locations per country") +
theme(panel.grid.minor = element_blank())+
ggtitle("Toponym locations from english novels counted by country")+
xlab("Longitude") + ylab("Latitude")
amm <- st_as_sf(amm)
flightmap <- st_join(world, amm, join = st_contains_properly, left=TRUE)
flightmap_sort <- flightmap %>% group_by(FIPS) %>% count()
library(RColorBrewer)
palette = colorRampPalette(brewer.pal(n=51, name='Oranges'))(51)
palette = c("white", palette)
# create map
ggplot() +
geom_sf(data=world, lwd = .5)+
geom_sf(data = flightmap, aes(fill = n)) +
scale_fill_viridis_c() +
# customize legend title
labs(fill = "Locations per country") +
theme(panel.grid.minor = element_blank())+
ggtitle("Toponym locations from english novels counted by country")+
xlab("Longitude") + ylab("Latitude")
View(flightmap_sort)
library(RColorBrewer)
palette = colorRampPalette(brewer.pal(n=51, name='Oranges'))(51)
palette = c("white", palette)
# create map
ggplot() +
geom_sf(data=world, lwd = .5)+
geom_sf(data = flightmap_sort, aes(fill = n)) +
scale_fill_viridis_c() +
# customize legend title
labs(fill = "Locations per country") +
theme(panel.grid.minor = element_blank())+
ggtitle("Toponym locations from english novels counted by country")+
xlab("Longitude") + ylab("Latitude")
airports <- read.csv("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/GIUZ_AirTravel_20210509/airports.csv")
amm <- read.csv("~/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/GIUZ_AirTravel_20210509/AIRTRAVELS.csv")
world <- st_read("/Users/chaualala/Desktop/UZH/MSc Geographie/2. Semester/GEO885 - GIS Science Project/GEO885/Data and Code/TM_WORLD_BORDERS_SIMPL-0 Kopie")
airports <- airports %>% dplyr::select(-c(continent, home_link, wikipedia_link, elevation_ft, municipality, scheduled_service, type, keywords, name, ident, iso_region, gps_code,local_code))
airports <- subset(airports, iata_code != "")
airports <- airports %>% st_as_sf(coords = c("longitude_deg", "latitude_deg"), crs = 4326) %>% rename(coordinates = geometry)
amm_arr <- left_join(amm,airports, by = c("ARRIVAL_AIRPORT" = "iata_code"))
amm_arr <- amm_arr %>% rename(dep_coordinates = coordinates,
dep_country = iso_country)
amm <- left_join(amm,airports, by = c("DEPARTURE_AIRPORT" = "iata_code"))
amm <- amm %>% rename(dep_coordinates = coordinates,
dep_country = iso_country)
amm <- left_join(amm,airports, by = c("ARRIVAL_AIRPORT" = "iata_code"))
amm <- amm %>% rename(arr_coordinates = coordinates,
arr_country = iso_country)
ggplot() +
geom_sf(data=world, lwd = .5)+
geom_sf(data = amm, aes(geometry = dep_coordinates, col = "dep_coordinates")) +
geom_sf(data = amm, aes(geometry = arr_coordinates, col = "arr_coordinates")) +
theme(panel.grid.minor = element_blank())+
ggtitle("Departure and arrival locations for all GIUZ flights separated by symbols")+
xlab("Longitude") + ylab("Latitude")
View(amm_arr)
amm_arr <- st_as_sf(amm_arr)
flightmap <- st_join(world, amm_arr, join = st_contains_properly, left=TRUE)
flightmap_sort <- flightmap %>% group_by(FIPS) %>% count()
library(RColorBrewer)
palette = colorRampPalette(brewer.pal(n=51, name='Oranges'))(51)
palette = c("white", palette)
# create map
ggplot() +
geom_sf(data=world, lwd = .5)+
geom_sf(data = flightmap_sort, aes(fill = n)) +
scale_fill_viridis_c() +
labs(fill = "Locations per country") +
theme(panel.grid.minor = element_blank())+
ggtitle("Toponym locations from english novels counted by country")+
xlab("Longitude") + ylab("Latitude")
amm_arr <- st_as_sf(amm_arr)
flightmap <- st_join(world, amm_arr, join = st_contains_properly, left=TRUE)
flightmap_sort <- flightmap %>% group_by(FIPS) %>% count()
library(RColorBrewer)
palette = colorRampPalette(brewer.pal(n=51, name='Oranges'))(51)
palette = c("white", palette)
# create map
ggplot() +
geom_sf(data=world, lwd = .5)+
geom_sf(data = flightmap_sort, aes(fill = n)) +
scale_fill_viridis_c() +
labs(fill = "Locations per country") +
theme(panel.grid.minor = element_blank())+
ggtitle("Arrival locations for all GIUZ flights counnted by country")+
xlab("Longitude") + ylab("Latitude")
View(flightmap_sort)
amm_arr <- st_as_sf(amm_arr)
flightmap <- st_join(world, amm_arr, join = st_contains_properly, left=TRUE)
flightmap_sort <- flightmap %>% group_by(FIPS) %>% count()
flightmap_sort
library(RColorBrewer)
palette = colorRampPalette(brewer.pal(n=51, name='Oranges'))(51)
palette = c("white", palette)
# create map
ggplot() +
geom_sf(data=world, lwd = .5)+
geom_sf(data = flightmap_sort, aes(fill = n)) +
scale_fill_viridis_c() +
labs(fill = "Locations per country") +
theme(panel.grid.minor = element_blank())+
ggtitle("Arrival locations for all GIUZ flights counnted by country")+
xlab("Longitude") + ylab("Latitude")
# create map
ggplot() +
geom_sf(data=world, lwd = .5)+
geom_sf(data = flightmap_sort, aes(fill = n)) +
scale_fill_viridis_b() +
labs(fill = "Locations per country") +
theme(panel.grid.minor = element_blank())+
ggtitle("Arrival locations for all GIUZ flights counnted by country")+
xlab("Longitude") + ylab("Latitude")
# create map
ggplot() +
geom_sf(data=world, lwd = .5)+
geom_sf(data = flightmap_sort, aes(fill = n)) +
scale_fill_viridis_d() +
labs(fill = "Locations per country") +
theme(panel.grid.minor = element_blank())+
ggtitle("Arrival locations for all GIUZ flights counnted by country")+
xlab("Longitude") + ylab("Latitude")
# create map
ggplot() +
geom_sf(data=world, lwd = .5)+
geom_sf(data = flightmap_sort, aes(fill = n)) +
scale_fill_viridis_c() +
labs(fill = "Locations per country") +
theme(panel.grid.minor = element_blank())+
ggtitle("Arrival locations for all GIUZ flights counnted by country")+
xlab("Longitude") + ylab("Latitude")
# create map
ggplot() +
geom_sf(data=world, lwd = .2)+
geom_sf(data = flightmap_sort, aes(fill = n)) +
scale_fill_viridis_c() +
labs(fill = "Locations per country") +
theme(panel.grid.minor = element_blank())+
ggtitle("Arrival locations for all GIUZ flights counnted by country")+
xlab("Longitude") + ylab("Latitude")
# create map
ggplot() +
geom_sf(data=world, lwd = .02)+
geom_sf(data = flightmap_sort, aes(fill = n)) +
scale_fill_viridis_c() +
labs(fill = "Locations per country") +
theme(panel.grid.minor = element_blank())+
ggtitle("Arrival locations for all GIUZ flights counnted by country")+
xlab("Longitude") + ylab("Latitude")
